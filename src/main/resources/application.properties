spring.application.name=authserver

spring.security.oauth2.authorizationserver.client.client-1.registration.client-id=client
# the client secret is "secret" (without quotes)
spring.security.oauth2.authorizationserver.client.client-1.registration.client-secret={bcrypt}$2a$10$jdJGhzsiIqYFpjJiYWMl/eKDOd8vdyQis2aynmFN0dgJ53XvpzzwC
# authenticate client with http basic authentication
spring.security.oauth2.authorizationserver.client.client-1.registration.client-authentication-methods=client_secret_basic
# type of authorization support from client to use (use client id and client secret to generate token)
# alternatives: authorization code, ...
spring.security.oauth2.authorizationserver.client.client-1.registration.authorization-grant-types=client_credentials,authorization_code,refresh_token
spring.security.oauth2.authorizationserver.client.client-1.registration.redirect-uris=http://127.0.0.1:8082/login/oauth2/code/spring
# these are arbitrary and same as OIDC we can create our own scheme
spring.security.oauth2.authorizationserver.client.client-1.registration.scopes=user.read,user.write,openid
## register client repository and other data in JDBC in future and create relate @Bean to defined in project

logging.level.org.springframework.security=trace
